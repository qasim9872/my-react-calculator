{"version":3,"sources":["constants/operators.ts","components/calculator.tsx","components/ui/calculator-screen.tsx","components/ui/calculator-keypad.tsx","utils/calculator.utils.ts","pages/home.page.tsx","App.tsx","index.tsx"],"names":["OPERATORS","ADDITION","SUBTRACTION","MULTIPLICATION","DIVISION","CLEAR","EQUAL","OPERATOR_VALUES","Object","values","KEYS","Calculator","useState","value","setValue","calculatorStringArray","setCalculatorStringArray","operator","setOperator","useEffect","console","log","evalString","filter","key","join","result","eval","onKeyPressed","isOperator","Number","String","push","className","classNames","keys","keyPressed","CalculatorScreen","CalculatorKey","keyToDisplay","keyValue","onClick","CalculatorKeypad","map","includes","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIAEA,sGAAO,IAAMA,EAAyC,CACpDC,SAAU,IACVC,YAAa,IACbC,eAAgB,IAChBC,SAAU,IACVC,MAAO,IACPC,MAAO,KAGIC,EAAkBC,OAAOC,OAAOT,GAEhCU,EAAO,CAClB,IACA,IACA,IACAV,EAAUI,SACV,IACA,IACA,IACAJ,EAAUG,eACV,IACA,IACA,IACAH,EAAUE,YACVF,EAAUK,MACV,IACAL,EAAUM,MACVN,EAAUC,W,8pCCpBCU,WAAuB,SAAvBA,aACX,cAA0BC,oDAAS,GAAnC,kNAAOC,MAAP,cAAcC,SAAd,cACA,WAA0DF,oDAAS,IAAnE,mNAAOG,sBAAP,cAA8BC,yBAA9B,cACA,WAAgCJ,sDAAhC,mNAAOK,SAAP,cAAiBC,YAAjB,cAEAC,sDAAU,WACR,GAAKF,SAAL,CAIA,GAFAG,QAAQC,IAAR,4BAEIJ,WAAajB,oDAAUK,MAMzB,OALAe,QAAQC,IAAR,yBAEAP,SAAS,GACTI,YAAY,WACZF,yBAAyB,IAI3BI,QAAQC,IAAR,0BACAP,SAAS,MACR,CAACG,WAEJE,sDAAU,WAGR,GAFAC,QAAQC,IAAR,2BAAwCN,uBAEpCE,WAAajB,oDAAUM,MAAO,CAChCc,QAAQC,IAAR,0BAAuCN,uBAEvC,IAAMO,WAAaP,sBAChBQ,QAAO,SAACC,GAAD,OAASA,IAAQxB,oDAAUM,SAClCmB,KAAK,IAERL,QAAQC,IAAR,oBAAiCC,YAGjC,IAAMI,OAASC,KAAKL,YACpBR,SAASY,WAEV,CAACT,SAAUF,wBAEd,IAAMa,aAAe,SAACJ,GACpBJ,QAAQC,IAAR,wBAA6BG,IAEzBK,+DAAWL,GACbN,YAAYM,GAEZV,SAASgB,OAAOC,OAAOlB,OAASkB,OAAOP,KAGzCT,sBAAsBiB,KAAKR,IAG7B,OACE,mEACES,UAAWC,kDACT,oDACA,8CAHJ,UAME,2DAAC,qDAAD,CACEjB,SAAUA,WAAajB,oDAAUK,MAAQ,GAAKY,SAC9CJ,MAAOA,QAGT,2DAAC,qDAAD,CAAkBsB,KAAMzB,oDAAM0B,WAAYR,oB,6BC1EhD,kDAEaS,EACX,SAAC,GAAD,QAAGpB,gBAAH,MAAc,GAAd,MAAkBJ,aAAlB,MAA0B,EAA1B,SACE,sBAAKoB,UAAU,2FAAf,UACE,+BAAOhB,IAEP,+BAAOJ,S,6BCPb,kEAGayB,EAIR,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,QAA3B,OACH,wBACER,UAAWC,IACT,4DACA,+CAEFO,QAAS,kBAAMA,EAAQD,IALzB,SAOGD,KAIQG,EAGR,SAAC,GAAD,IAAGN,EAAH,EAAGA,WAAYD,EAAf,EAAeA,KAAf,OACH,qBAAKF,UAAU,0CAAf,SACGE,EAAKQ,KAAI,SAACnB,GAAD,OACR,cAACc,EAAD,CAEEC,aAAcf,EACdgB,SAAUhB,EACViB,QAAS,SAAC5B,GAAD,OAAWuB,EAAWvB,KAH1BW,U,6BC1Bb,6CAEaK,EAAa,SAACL,GAAD,OACxBjB,IAAgBqC,SAASpB,K,qHCQZqB,EARQ,WACrB,OACE,qBAAKZ,UAAU,6CAAf,SACE,cAAC,IAAD,OCMSa,MARf,WACE,OACE,qBAAKb,UAAU,gBAAf,SACE,cAAC,EAAD,OCHNc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.96831772.chunk.js","sourcesContent":["export type OPERATOR = '+' | '-' | '*' | '/' | '=' | 'C';\n\nexport const OPERATORS: { [key: string]: OPERATOR } = {\n  ADDITION: '+',\n  SUBTRACTION: '-',\n  MULTIPLICATION: '*',\n  DIVISION: '/',\n  CLEAR: 'C',\n  EQUAL: '=',\n};\n\nexport const OPERATOR_VALUES = Object.values(OPERATORS);\n\nexport const KEYS = [\n  '7',\n  '8',\n  '9',\n  OPERATORS.DIVISION,\n  '4',\n  '5',\n  '6',\n  OPERATORS.MULTIPLICATION,\n  '1',\n  '2',\n  '3',\n  OPERATORS.SUBTRACTION,\n  OPERATORS.CLEAR,\n  '0',\n  OPERATORS.EQUAL,\n  OPERATORS.ADDITION,\n];\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { CalculatorScreen } from './ui/calculator-screen';\nimport { CalculatorKeypad } from './ui/calculator-keypad';\n\nimport { KEYS, OPERATOR, OPERATORS } from '../constants/operators';\nimport { isOperator } from '../utils/calculator.utils';\n\nexport const Calculator: React.FC = () => {\n  const [value, setValue] = useState(0);\n  const [calculatorStringArray, setCalculatorStringArray] = useState([]);\n  const [operator, setOperator] = useState<OPERATOR>();\n\n  useEffect(() => {\n    if (!operator) return;\n\n    console.log(`in first use effect hook`);\n\n    if (operator === OPERATORS.CLEAR) {\n      console.log(`clearing screen value`);\n\n      setValue(0);\n      setOperator(null);\n      setCalculatorStringArray([]);\n      return;\n    }\n\n    console.log(`resetting screen value`);\n    setValue(0);\n  }, [operator]);\n\n  useEffect(() => {\n    console.log(`calculatorStringArray is`, calculatorStringArray);\n\n    if (operator === OPERATORS.EQUAL) {\n      console.log(`evaluating final result`, calculatorStringArray);\n\n      const evalString = calculatorStringArray\n        .filter((key) => key !== OPERATORS.EQUAL)\n        .join('');\n\n      console.log(`evaluating string`, evalString);\n\n      // eslint-disable-next-line no-eval\n      const result = eval(evalString);\n      setValue(result);\n    }\n  }, [operator, calculatorStringArray]);\n\n  const onKeyPressed = (key: string) => {\n    console.log(`user pressed: ${key}`);\n\n    if (isOperator(key)) {\n      setOperator(key);\n    } else {\n      setValue(Number(String(value) + String(key)));\n    }\n\n    calculatorStringArray.push(key);\n  };\n\n  return (\n    <div\n      className={classNames(\n        'bg-ui-primary border-4 border-gray-600 h-3/6 w-80',\n        'flex flex-col justify-between items-center'\n      )}\n    >\n      <CalculatorScreen\n        operator={operator === OPERATORS.CLEAR ? '' : operator}\n        value={value}\n      />\n\n      <CalculatorKeypad keys={KEYS} keyPressed={onKeyPressed} />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const CalculatorScreen: React.FC<{ operator?: string; value?: number }> =\n  ({ operator = '', value = 0 }) => (\n    <div className=\"bg-ui-secondary-100 flex justify-between border-4 my-4 p-2 border-gray-600 w-72 text-4xl\">\n      <span>{operator}</span>\n\n      <span>{value}</span>\n    </div>\n  );\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport const CalculatorKey: React.FC<{\n  keyToDisplay: string;\n  keyValue: string;\n  onClick: (value: string) => void;\n}> = ({ keyToDisplay, keyValue, onClick }) => (\n  <button\n    className={classNames(\n      'flex justify-center items-center border-4 border-gray-600',\n      'text-white text-4xl hover:bg-gray-600 hover'\n    )}\n    onClick={() => onClick(keyValue)}\n  >\n    {keyToDisplay}\n  </button>\n);\n\nexport const CalculatorKeypad: React.FC<{\n  keyPressed: (key: string) => void;\n  keys: string[];\n}> = ({ keyPressed, keys }) => (\n  <div className=\"w-72 my-4 h-full grid grid-cols-4 gap-4\">\n    {keys.map((key) => (\n      <CalculatorKey\n        key={key}\n        keyToDisplay={key}\n        keyValue={key}\n        onClick={(value) => keyPressed(value)}\n      />\n    ))}\n  </div>\n);\n","import { OPERATOR_VALUES, OPERATOR } from '../constants/operators';\n\nexport const isOperator = (key: string): key is OPERATOR =>\n  OPERATOR_VALUES.includes(key as any);\n","import React from 'react';\nimport { Calculator } from '../components/calculator';\n\nconst Home: React.FC = () => {\n  return (\n    <div className=\"flex flex-grow justify-center items-center\">\n      <Calculator />\n    </div>\n  );\n};\n\nexport default Home;\n","import 'styles/global.css';\n\nimport Home from './pages/home.page';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"h-screen flex\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}